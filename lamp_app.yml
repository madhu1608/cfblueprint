---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Create a lamp_app/App setup'

Parameters:
    BastionStack:
        Description: Detailing Bastion CF
        Type: String
        Default: Bastion
    AppVpcCidr:    
        Description: App Vpc Cidr
        Type: String
        Default: 10.1.0.0/16            
    AppPubSn1Cidr:    
        Description: App Pub Sn1 Cidr
        Type: String
        Default: 10.1.0.0/24    
    AppPubSn2Cidr:    
        Description: App Pub Sn2 Cidr
        Type: String
        Default: 10.1.1.0/24
    AppPriSn1Cidr:    
        Description: App Pri Sn1 Cidr
        Type: String
        Default: 10.1.2.0/24
    AppPriSn2Cidr:    
        Description: App Pri Sn2 Cidr
        Type: String
        Default: 10.1.3.0/24        
    MyIPAddress:    
        Description: My IP Address
        Type: String
        Default: 42.108.239.144/32
        
Resources:
    AppVpc:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref AppVpcCidr
            EnableDnsSupport: 'true'
            EnableDnsHostnames: 'true'
            InstanceTenancy: default
            Tags:
            -   Key: Name
                Value: app-vpc        

    AppIgw:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
            -   Key: Name
                Value: app-igw

    AppIgwAttachToAppVpc:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            VpcId: 
                Ref: AppVpc
            InternetGatewayId:
                Ref: AppIgw
                
    AppPubSn1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId:
                Ref: AppVpc
            CidrBlock: !Ref AppPubSn1Cidr
            AvailabilityZone: "us-east-2a"
            Tags:
            - Key: Name
              Value: app-pub-sn1

    AppPubSn2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId:
                Ref: AppVpc
            CidrBlock: !Ref AppPubSn2Cidr
            AvailabilityZone: "us-east-2b"
            Tags:
            - Key: Name
              Value: app-pub-sn2

    AppRtIgw:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId:
                Ref: AppVpc
            Tags:
            - Key: Name
              Value: app-rt-igw

    AppRtIgwAddRoute:
        Type: AWS::EC2::Route
        DependsOn: AppIgw
        Properties:
            RouteTableId:
                Ref: AppRtIgw
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId:
                Ref: AppIgw
                
    AppRtIgwAssociateAppPubSn1:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId:
                Ref: AppPubSn1
            RouteTableId:
                Ref: AppRtIgw

    AppRtIgwAssociateAppPubSn2:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId:
                Ref: AppPubSn2
            RouteTableId:
                Ref: AppRtIgw   

    AppPriSn1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId:
                Ref: AppVpc
            CidrBlock: !Ref AppPriSn1Cidr
            AvailabilityZone: "us-east-2a"
            Tags:
            - Key: Name
              Value: app-pri-sn1
    AppPriSn2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId:
                Ref: AppVpc
            CidrBlock: !Ref AppPriSn2Cidr
            AvailabilityZone: "us-east-2b"
            Tags:
            - Key: Name
              Value: app-pri-sn2                

    AppNgw:
        DependsOn: AppIgwAttachToAppVpc
        Type: AWS::EC2::NatGateway
        Properties:
            AllocationId: !GetAtt 'AppNgwEIP.AllocationId'
            SubnetId:
                Ref: AppPubSn1
            Tags:
            -   Key: Name
                Value: app-ngw

    AppNgwEIP:
        Type: AWS::EC2::EIP
        Properties:
            Domain: vpc
            
    AppRtNgw:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId:
                Ref: AppVpc
            Tags:
            - Key: Name
              Value: app-rt-ngw
              
    AppNgwRoute:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId:
                Ref: AppRtNgw
            DestinationCidrBlock: 0.0.0.0/0
            NatGatewayId:
                Ref: AppNgw

    AppRtNgwAssociateAppPriSn1:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId:
                Ref: AppPriSn1
            RouteTableId:
                Ref: AppRtNgw

    AppRtNgwAssociateAppPriSn2:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId:
                Ref: AppPriSn2
            RouteTableId:
                Ref: AppRtNgw    

    BastionAppVPCPeer:
        Type: AWS::EC2::VPCPeeringConnection
        Properties:
            VpcId:
                Ref: AppVpc
            PeerVpcId:
                Fn::ImportValue: !Sub '${BastionStack}-VpcId'

    AppRtIgwAddRouteIncludeBastionInApp:
        Type: AWS::EC2::Route
        DependsOn: AppIgw
        Properties:
            RouteTableId:
                Ref: AppRtIgw
            DestinationCidrBlock:
                Fn::ImportValue: !Sub '${BastionStack}-VpcCidr'
            VpcPeeringConnectionId:
                Ref: BastionAppVPCPeer

    AppRtIgwAddRouteIncludeAppInBastion:
        Type: AWS::EC2::Route
        Properties:
            RouteTableId:
                Fn::ImportValue: !Sub '${BastionStack}-RtIgw'
            DestinationCidrBlock: !Ref AppVpcCidr
            VpcPeeringConnectionId:
                Ref: BastionAppVPCPeer
                
    AppPubSg1:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: AppPubSg1
            GroupName: AppPubSg1
            VpcId:
                Ref: AppVpc
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp:
                Fn::ImportValue: !Sub '${BastionStack}-VpcCidr'
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: !Ref MyIPAddress
            Tags:
            - Key: Name
              Value: app-pub-sg1         

    AppPriSg1:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: AppPriSg1
            GroupName: AppPriSg1
            VpcId:
                Ref: AppVpc
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp:
                Fn::ImportValue: !Sub '${BastionStack}-VpcCidr'              
            - IpProtocol: tcp
              FromPort: 3306
              ToPort: 3306
              CidrIp: !Ref AppPubSn1Cidr
            - IpProtocol: tcp
              FromPort: 3306
              ToPort: 3306
              CidrIp: !Ref AppPubSn2Cidr              
            Tags:
            - Key: Name
              Value: app-pri-sg1

    AppPubSn1Ins1:
        Type: AWS::EC2::Instance
        Properties:
            InstanceType: t2.micro
            ImageId: ami-0b500ef59d8335eee
            KeyName: bastion
            NetworkInterfaces: 
            - AssociatePublicIpAddress: "false"
              DeviceIndex: "0"
              GroupSet:
              - Ref:    "AppPubSg1"
              SubnetId: 
                Ref:    "AppPubSn1"
            Tags:                
            - Key: Name
              Value: app-pub-ec2

    AppDBSubnetGroup: 
        Type: "AWS::RDS::DBSubnetGroup"
        Properties: 
            DBSubnetGroupDescription: "AppDBSubnetGroup"
            SubnetIds: 
            - Ref: AppPriSn1
            - Ref: AppPriSn2
            Tags: 
            - Key: Name
              Value: "AppDBSubnetGroup"              

Outputs:
    Pip:
        Description: Output FE Pip
        Value: !GetAtt AppPubSn1Ins1.PrivateIp
        Export:
            Name: !Sub "${AWS::StackName}-Pip"            

